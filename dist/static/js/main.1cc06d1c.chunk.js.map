{"version":3,"sources":["redux/index.js","components/Header.js","components/Footer.js","components/TopicDrawer.js","components/Question.js","components/QuestionList.js","components/Login.js","components/Register.js","components/Answer.js","components/AnswerList.js","App.js","index.js"],"names":["store","createStore","combineReducers","auth","state","action","type","token","payload","tokenParts","split","encodedPayload","rawPayload","atob","user","JSON","parse","authenticated","username","userId","id","topic","topics","useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","menuButton","marginRight","menuButtonHidden","display","Header","props","classes","drawerOpen","handleDrawerOpen","useSelector","title","Fragment","Toolbar","className","IconButton","edge","color","aria-label","onClick","clsx","Typography","component","variant","align","noWrap","Button","size","axios","defaults","headers","Authorization","localStorage","clear","dispatch","Link","to","Copyright","Date","getFullYear","footer","backgroundColor","background","paper","Footer","Container","maxWidth","TopicDrawer","open","handleDrawerClose","useState","setTopics","useEffect","a","get","response","data","Drawer","Divider","ListItem","button","ListItemText","primary","map","card","cardDetails","cardMedia","width","Question","question","Grid","item","sm","md","CardActionArea","href","Topic","Card","CardContent","User","createdAt","paragraph","description","answerCount","QuestionList","questions","setQuestions","setQuestion","hack","setHack","useParams","questionData","topicTitle","post","container","TextField","margin","required","fullWidth","label","value","onChange","e","target","marginTop","flexDirection","alignItems","avatar","secondary","main","form","submit","useForm","handleSubmit","register","remember","error","setError","history","useHistory","onSubmit","password","common","setItem","push","status","CssBaseline","Avatar","noValidate","name","autoComplete","autoFocus","inputRef","FormControlLabel","control","Checkbox","Register","errors","watch","xs","message","pattern","validate","password2","justify","Answer","answer","text","AnswerList","answers","setAnswers","setAnswer","questionId","answerData","Answers","App","React","setOpen","path","LogIn","baseURL","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SA8BO,IAAMA,EAAQC,YACnBC,YAAgB,CAAEC,KA7BpB,WAAoC,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCACjC,OAAQA,EAAOC,MACb,IAAK,QACH,IAAMC,EAAQF,EAAOG,QAAQD,MACvBE,EAAaF,EAAMG,MAAM,KACzBC,EAAiBF,EAAW,GAC5BG,EAAaC,KAAKF,GAClBG,EAAOC,KAAKC,MAAMJ,GACxB,MAAO,CAAEK,eAAe,EAAMC,SAAUb,EAAOG,QAAQU,SAAUC,OAAQL,EAAKM,IAEhF,IAAK,SACH,MAAO,CAAEH,eAAe,GAC1B,QACE,OAAOb,IAgBaiB,MAZ1B,WAAqC,IAArBjB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAClC,OAAQA,EAAOC,MACb,IAAK,WACH,MAAO,CAAEe,MAAOhB,EAAOG,QAAQa,OACjC,IAAK,YACH,MAAO,CAAEC,OAAQjB,EAAOG,QAAQc,QAClC,QACE,OAAOlB,O,OCZPmB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,aAAa,aAAD,OAAeF,EAAMG,QAAQC,UAE3CC,aAAc,CACZC,KAAM,GAERC,iBAAkB,CAChBC,eAAgB,gBAChBC,UAAW,QAEbC,YAAa,CACXC,QAASX,EAAMY,QAAQ,GACvBC,WAAY,GAEdC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBC,QAAS,YAIE,SAASC,EAAQC,GAC9B,IAAMC,EAAUtB,IACRuB,EAAiCF,EAAjCE,WAAYC,EAAqBH,EAArBG,iBAQpB,IACM9B,EAAgB+B,aADM,SAAA5C,GAAK,OAAIA,GAASA,EAAMD,KAAKc,iBAGnDC,EAAW8B,aADM,SAAA5C,GAAK,OAAIA,GAASA,EAAMD,KAAKe,YAI9CG,EAAQ2B,aADM,SAAA5C,GAAK,OAAIA,GAASA,EAAMiB,MAAMA,SAE5C4B,EAAQ5B,EAAK,qBAAiBA,GAAU,WAE9C,OACE,cAAC,IAAM6B,SAAP,UACE,eAACC,EAAA,EAAD,CAASC,UAAWP,EAAQnB,QAA5B,UACE,cAAC2B,EAAA,EAAD,CACIC,KAAK,QACLC,MAAM,UACNC,aAAW,cACXC,QAASV,EACTK,UAAWM,YAAKb,EAAQN,WAAYO,GAAcD,EAAQJ,kBAL9D,SAOI,cAAC,IAAD,MAEJ,cAACkB,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,KACRN,MAAM,UACNO,MAAM,SACNC,QAAM,EACNX,UAAWP,EAAQf,aANrB,SAQGmB,IAGDhC,EAEM,iCACE,eAAC0C,EAAA,EAAD,uBACYzC,KAEZ,cAAC8C,EAAA,EAAD,CAAQH,QAAQ,WAAWI,KAAK,QAAQR,QA5CxD,kBACSS,IAAMC,SAASC,QAAQC,cAC9BC,aAAaC,MAAM,SACnBvE,EAAMwE,SAAS,CAAElE,KAAM,YAyCT,wBAMF,iCACE,cAAC0D,EAAA,EAAD,CAAQH,QAAQ,WAAWI,KAAK,QAAQL,UAAWa,IAAMC,GAAG,SAA5D,oBAGA,cAACV,EAAA,EAAD,CAAQH,QAAQ,WAAWI,KAAK,QAAQL,UAAWa,IAAMC,GAAG,YAA5D,8B,aCzFlB,SAASC,IACP,OACE,eAAChB,EAAA,EAAD,CAAYE,QAAQ,QAAQN,MAAM,gBAAgBO,MAAM,SAAxD,UACG,kBACD,cAACW,EAAA,EAAD,uBAEQ,KACP,IAAIG,MAAOC,cACX,OAKP,IAAMtD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqD,OAAQ,CACNC,gBAAiBtD,EAAMG,QAAQoD,WAAWC,MAC1C7C,QAASX,EAAMY,QAAQ,EAAG,QAIf,SAAS6C,EAAQtC,GAC9B,IAAMC,EAAUtB,IAEhB,OACE,wBAAQ6B,UAAWP,EAAQiC,OAA3B,SACE,cAACK,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACT,EAAD,Q,kFCxBO,SAASU,EAAazC,GAAQ,IACnC0C,EAA4B1C,EAA5B0C,KAAMC,EAAsB3C,EAAtB2C,kBAD4B,EAEdC,mBAAS,IAFK,mBAEnClE,EAFmC,KAE3BmE,EAF2B,KAW1C,OAPAC,oBAAS,sBAAC,8BAAAC,EAAA,sEACezB,IAAM0B,IAAI,WADzB,OACFC,EADE,OAEFvE,EAASuE,EAASC,KAAKxE,OAC7BmE,EAAUnE,GACVtB,EAAMwE,SAAS,CAAElE,KAAM,YAAaE,QAAS,CAAEc,YAJvC,2CAKP,IAGD,eAACyE,EAAA,EAAD,CACElC,QAAQ,aACRyB,KAAMA,EAFR,UAIE,8BACE,cAACjC,EAAA,EAAD,CAAYI,QAAS8B,EAArB,SACE,cAAC,IAAD,QAGJ,cAACS,EAAA,EAAD,IACE,cAACC,EAAA,EAAD,CAAUC,QAAM,EAACtC,UAAWa,IAAMC,GAAG,IAArC,SACE,cAACyB,EAAA,EAAD,CAAcC,QAAQ,UAEvB9E,EAAO+E,KAAI,SAAAhF,GAAK,OACf,cAAC4E,EAAA,EAAD,CAAUC,QAAM,EAAmBtC,UAAWa,IAAMC,GAAI,IAAMrD,EAAM4B,MAApE,SACE,cAACkD,EAAA,EAAD,CAAcC,QAAS/E,EAAM4B,SADT5B,EAAM4B,a,iDCzBhC1B,EAAYC,YAAW,CAC3B8E,KAAM,CACJ5D,QAAS,QAEX6D,YAAa,CACXxE,KAAM,GAERyE,UAAW,CACTC,MAAO,OAII,SAASC,EAAU9D,GAChC,IAAMC,EAAUtB,IACRoF,EAAa/D,EAAb+D,SAER,OACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAACC,EAAA,EAAD,CAAgBpD,UAAU,IAAIqD,KAAI,WAAMN,EAASO,MAAMjE,MAArB,YAA8B0D,EAASvF,IAAzE,SACE,cAAC+F,EAAA,EAAD,CAAM/D,UAAWP,EAAQyD,KAAzB,SACE,qBAAKlD,UAAWP,EAAQ0D,YAAxB,SACE,eAACa,EAAA,EAAD,WACE,eAACzD,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,UACG8C,EAAS1D,MADZ,MACsB0D,EAASU,KAAKnG,YAEpC,cAACyC,EAAA,EAAD,CAAYE,QAAQ,YAAYN,MAAM,gBAAtC,SACGoD,EAASW,YAEZ,cAAC3D,EAAA,EAAD,CAAYE,QAAQ,YAAY0D,WAAS,EAAzC,SACGZ,EAASa,cAEZ,eAAC7D,EAAA,EAAD,CAAYE,QAAQ,YAAYN,MAAM,UAAtC,UACGoD,EAASc,YADZ,yBChCd,IAAMlG,EAAYC,YAAW,CAC3B8E,KAAM,CACJ5D,QAAS,QAEX6D,YAAa,CACXxE,KAAM,GAERyE,UAAW,CACTC,MAAO,OAII,SAASiB,EAAc9E,GACpC,IAAMC,EAAUtB,IAD2B,EAETiE,mBAAS,IAFA,mBAEpCmC,EAFoC,KAEzBC,EAFyB,OAGXpC,mBAAS,IAHE,mBAGpCmB,EAHoC,KAG1BkB,EAH0B,OAInBrC,mBAAS,GAJU,mBAIpCsC,EAJoC,KAI9BC,EAJ8B,KAKnC1G,EAAU2G,cAAV3G,MAEFJ,EAAgB+B,aADM,SAAA5C,GAAK,OAAIA,GAASA,EAAMD,KAAKc,iBAGnDE,EAAS6B,aADM,SAAA5C,GAAK,OAAIA,GAASA,EAAMD,KAAKgB,UARP,4CAsB3C,4BAAAwE,EAAA,6DACQsC,EAAe,CACnBhF,MAAO0D,EACPuB,WAAY7G,EACZF,UAJJ,SAMQ+C,IAAMiE,KAAK,cAAeF,GANlC,OAOEF,EAAQD,EAAO,GAPjB,4CAtB2C,sBAgC3C,OArBApC,oBAAS,sBAAC,4BAAAC,EAAA,yDACR3F,EAAMwE,SAAS,CAAElE,KAAM,WAAYE,QAAS,CAAEa,YAE1CA,EAHI,gCAIW6C,IAAM0B,IAAN,2BAA8BvE,IAJzC,OAINwE,EAJM,8CAMW3B,IAAM0B,IAAI,cANrB,OAMNC,EANM,eAQR+B,EAAa/B,EAASC,KAAK6B,WARnB,4CASP,CAACtG,EAAOyG,IAaT,+BACE,eAAClB,EAAA,EAAD,CAAMwB,WAAS,EAAC/F,QAAS,EAAzB,UACGsF,EAAUtB,KAAI,SAACM,GAAD,OACb,cAACD,EAAD,CAA4BC,SAAUA,GAAvBA,EAASvF,OAGxBH,GAAiBI,GACjB,cAAC2F,EAAA,EAAD,CAAgBpD,UAAU,MAA1B,SACE,cAACuD,EAAA,EAAD,CAAM/D,UAAWP,EAAQyD,KAAzB,SACE,qBAAKlD,UAAWP,EAAQ0D,YAAxB,SACE,eAACa,EAAA,EAAD,WACE,cAACiB,EAAA,EAAD,CACExE,QAAQ,WACRyE,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTpH,GAAG,cACHqH,MAAM,eACNC,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAOf,EAAYe,EAAEC,OAAOH,UAExC,cAAC1E,EAAA,EAAD,CACEwE,WAAS,EACT3E,QAAQ,YACRN,MAAM,UACNE,QA1DyB,2CAsD3B,+B,4DCxDZlC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,MAAO,CACL6D,UAAWrH,EAAMY,QAAQ,GACzBK,QAAS,OACTqG,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNX,OAAQ7G,EAAMY,QAAQ,GACtB0C,gBAAiBtD,EAAMG,QAAQsH,UAAUC,MAE3CC,KAAM,CACJ3C,MAAO,OACPqC,UAAWrH,EAAMY,QAAQ,IAE3BgH,OAAQ,CACNf,OAAQ7G,EAAMY,QAAQ,EAAG,EAAG,QAIjB,cACb,IAAMQ,EAAUtB,KADG,EAE0B+H,YAAQ,IAA7CC,EAFW,EAEXA,aAAcC,EAFH,EAEGA,SAAUC,EAFb,EAEaA,SAFb,EAGOjE,mBAAS,IAHhB,mBAGZkE,EAHY,KAGLC,EAHK,KAIbC,EAAUC,cAEVC,EAAWP,EAAY,uCAAC,WAAOzD,GAAP,uBAAAH,EAAA,6DACpBzE,EAAiC4E,EAAjC5E,SAAU6I,EAAuBjE,EAAvBiE,SAAUN,EAAa3D,EAAb2D,SADA,kBAGHvF,IAAMiE,KAAK,SAAU,CAAEjH,WAAU6I,aAH9B,OAGpBlE,EAHoB,OAIpBtF,EAAQsF,EAASC,KAAKvF,MAC5B2D,IAAMC,SAASC,QAAQ4F,OAAS,CAAE3F,cAAc,UAAD,OAAY9D,IAC3DP,EAAMwE,SAAS,CAAElE,KAAM,QAASE,QAAS,CAAEU,WAAUX,WACjDkJ,IACFnF,aAAa2F,QAAQ,QAAS1J,GAC9B+D,aAAa2F,QAAQ,WAAY/I,IAEnC0I,EAAQM,KAAK,KAXa,kDAaI,MAA1B,KAAMrE,SAASsE,OACjBR,EAAS,uBAETA,EAAS,wBAhBe,0DAAD,uDAqB7B,OACE,eAACxE,EAAA,EAAD,CAAWvB,UAAU,OAAOwB,SAAS,KAArC,UACE,cAACgF,EAAA,EAAD,IACA,sBAAKhH,UAAWP,EAAQoC,MAAxB,UACE,cAACoF,EAAA,EAAD,CAAQjH,UAAWP,EAAQoG,OAA3B,SACE,cAAC,KAAD,MAEF,cAACtF,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SACG6F,GAAS,WAEZ,uBAAMtG,UAAWP,EAAQuG,KAAMkB,YAAU,EAACR,SAAUA,EAApD,UACE,cAACzB,EAAA,EAAD,CACExE,QAAQ,WACRyE,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTpH,GAAG,WACHqH,MAAM,WACN8B,KAAK,WACLC,aAAa,WACbC,WAAS,EACTC,SAAUlB,IAEZ,cAACnB,EAAA,EAAD,CACExE,QAAQ,WACRyE,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT+B,KAAK,WACL9B,MAAM,WACNnI,KAAK,WACLc,GAAG,WACHoJ,aAAa,mBACbE,SAAUlB,IAEZ,cAACmB,EAAA,EAAD,CACEC,QAAS,cAACC,GAAA,EAAD,CAAUtH,MAAM,YACzBkF,MAAM,cACN8B,KAAK,WACL7B,MAAOe,EACPiB,SAAUlB,IAEZ,cAACxF,EAAA,EAAD,CACE1D,KAAK,SACLkI,WAAS,EACT3E,QAAQ,YACRN,MAAM,UACNH,UAAWP,EAAQwG,OALrB,oBASA,cAACzC,EAAA,EAAD,CAAMwB,WAAS,EAAf,SACE,cAACxB,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACpC,EAAA,EAAD,CAAMwC,KAAK,YAAYpD,QAAQ,QAA/B,SACG,kDCxGXtC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,MAAO,CACL6D,UAAWrH,EAAMY,QAAQ,GACzBK,QAAS,OACTqG,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNX,OAAQ7G,EAAMY,QAAQ,GACtB0C,gBAAiBtD,EAAMG,QAAQsH,UAAUC,MAE3CC,KAAM,CACJ3C,MAAO,OACPqC,UAAWrH,EAAMY,QAAQ,IAE3BgH,OAAQ,CACNf,OAAQ7G,EAAMY,QAAQ,EAAG,EAAG,IAE9BqH,MAAO,CACLnG,MAAO,WAII,SAASuH,KACtB,IAAMjI,EAAUtB,KADkB,EAK9B+H,cAFFE,EAHgC,EAGhCA,SAAUuB,EAHsB,EAGtBA,OAAQxB,EAHc,EAGdA,aAAcyB,EAHA,EAGAA,MAG5BpB,EAAUC,cANkB,4CAQlC,WAAyBT,GAAzB,iBAAAzD,EAAA,6DACUzE,EAAuBkI,EAAvBlI,SAAU6I,EAAaX,EAAbW,SADpB,SAEyB7F,IAAMiE,KAAK,YAAa,CAAEjH,WAAU6I,aAF7D,OAG0B,MAH1B,OAGeI,QACXP,EAAQM,KAAK,UAJjB,4CARkC,sBAgBlC,OACE,eAAC/E,EAAA,EAAD,CAAWvB,UAAU,OAAOwB,SAAS,KAArC,UACE,cAACgF,EAAA,EAAD,IACA,sBAAKhH,UAAWP,EAAQoC,MAAxB,UACE,cAACoF,EAAA,EAAD,CAAQjH,UAAWP,EAAQoG,OAA3B,SACE,cAAC,KAAD,MAEF,cAACtF,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,qBAGA,uBAAMT,UAAWP,EAAQuG,KAAMkB,YAAU,EAACR,SAAUP,GA1BxB,8CA0B5B,UACE,eAAC3C,EAAA,EAAD,CAAMwB,WAAS,EAAC/F,QAAS,EAAzB,UACE,eAACuE,EAAA,EAAD,CAAMC,MAAI,EAACoE,GAAI,GAAf,UACE,cAAC5C,EAAA,EAAD,CACExE,QAAQ,WACR0E,UAAQ,EACRC,WAAS,EACTpH,GAAG,WACHqH,MAAM,WACN8B,KAAK,WACLC,aAAa,WACbE,SAAUlB,EAAS,CAAEjB,SAAU,kCAEhCwC,EAAO7J,UACN,sBAAMkC,UAAWP,EAAQ6G,MAAzB,SAAiCqB,EAAO7J,SAASgK,aAGrD,cAACtE,EAAA,EAAD,CAAMC,MAAI,EAACoE,GAAI,GAAf,SACE,cAAC5C,EAAA,EAAD,CACExE,QAAQ,WACR0E,UAAQ,EACRC,WAAS,EACT+B,KAAK,WACL9B,MAAM,WACNnI,KAAK,WACLc,GAAG,WACHoJ,aAAa,mBACbE,SAAUlB,EAAS,CACjBjB,SAAU,+BACV4C,QAAS,CACPzC,MAAO,yCACPwC,QAAS,oEAKhBH,EAAOhB,UACN,sBAAM3G,UAAWP,EAAQ6G,MAAzB,SAAiCqB,EAAOhB,SAASmB,UAEnD,eAACtE,EAAA,EAAD,CAAMC,MAAI,EAACoE,GAAI,GAAf,UACE,cAAC5C,EAAA,EAAD,CACExE,QAAQ,WACR0E,UAAQ,EACRC,WAAS,EACT+B,KAAK,YACL9B,MAAM,kBACNnI,KAAK,WACLc,GAAG,YACHoJ,aAAa,mBACbE,SAAUlB,EAAS,CACjBjB,SAAU,sCACV6C,SAAU,SAAC1C,GAAD,OAAWA,IAAUsC,EAAM,aAAe,kCAGvDD,EAAOM,WACN,sBAAMjI,UAAWP,EAAQ6G,MAAzB,SAAiCqB,EAAOM,UAAUH,gBAIxD,cAAClH,EAAA,EAAD,CACE1D,KAAK,SACLkI,WAAS,EACT3E,QAAQ,YACRN,MAAM,UACNH,UAAWP,EAAQwG,OALrB,qBASA,cAACzC,EAAA,EAAD,CAAMwB,WAAS,EAACkD,QAAQ,WAAxB,SACE,cAAC1E,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACpC,EAAA,EAAD,CAAMwC,KAAK,SAASpD,QAAQ,QAA5B,2DC7Hd,IAAMtC,GAAYC,YAAW,CAC3B8E,KAAM,CACJ5D,QAAS,QAEX6D,YAAa,CACXxE,KAAM,GAERyE,UAAW,CACTC,MAAO,OAII,SAAS8E,GAAQ3I,GAC9B,IAAMC,EAAUtB,KACRiK,EAAW5I,EAAX4I,OAER,OACE,cAAC5E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAACC,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAM/D,UAAWP,EAAQyD,KAAzB,SACE,qBAAKlD,UAAWP,EAAQ0D,YAAxB,SACE,eAACa,EAAA,EAAD,WACE,cAACzD,EAAA,EAAD,CAAYE,QAAQ,YAAYN,MAAM,gBAAtC,SACGiI,EAAOlE,YAEV,eAAC3D,EAAA,EAAD,CAAYE,QAAQ,YAAY0D,WAAS,EAAzC,UACGiE,EAAOC,KADV,MACmBD,EAAOnE,KAAKnG,uBC3B7C,IAAMK,GAAYC,YAAW,CAC3B8E,KAAM,CACJ5D,QAAS,QAEX6D,YAAa,CACXxE,KAAM,GAERyE,UAAW,CACTC,MAAO,OAII,SAASiF,GAAY9I,GAClC,IAAMC,EAAUtB,KADyB,EAEXiE,mBAAS,IAFE,mBAElCmG,EAFkC,KAEzBC,EAFyB,OAGTpG,mBAAS,IAHA,mBAGlCmB,EAHkC,KAGxBkB,EAHwB,OAIbrC,mBAAS,IAJI,mBAIlCgG,EAJkC,KAI1BK,EAJ0B,OAKX7D,cAAtB3G,EALiC,EAKjCA,MAAOyK,EAL0B,EAK1BA,WAET7K,EAAgB+B,aADM,SAAA5C,GAAK,OAAIA,GAASA,EAAMD,KAAKc,iBAGnDE,EAAS6B,aADM,SAAA5C,GAAK,OAAIA,GAASA,EAAMD,KAAKgB,UART,EAUjBqE,mBAAS,GAVQ,mBAUlCsC,EAVkC,KAU5BC,EAV4B,iDAmBzC,4BAAApC,EAAA,6DACQoG,EAAa,CACjBN,KAAMD,EACNM,aACA3K,UAJJ,SAMQ+C,IAAMiE,KAAK,YAAa4D,GANhC,OAOEhE,EAAQD,EAAO,GAPjB,4CAnByC,sBA6BzC,OAjBApC,oBAAS,sBAAC,4BAAAC,EAAA,6DACR3F,EAAMwE,SAAS,CAAElE,KAAM,WAAYE,QAAS,CAAEa,WADtC,SAEe6C,IAAM0B,IAAN,qBAAwBkG,IAFvC,OAEFjG,EAFE,OAGR+F,EAAW/F,EAASC,KAAKkG,SACzBnE,EAAYhC,EAASC,MAJb,2CAKP,CAACgG,EAAYhE,IAad,+BACE,eAAClB,EAAA,EAAD,CAAMwB,WAAS,EAAC/F,QAAS,EAAzB,UACE,cAAC2E,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAM/D,UAAWP,EAAQyD,KAAzB,SACE,qBAAKlD,UAAWP,EAAQ0D,YAAxB,SACE,eAACa,EAAA,EAAD,WACE,eAACzD,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,UACG8C,EAAS1D,MACR0D,EAASU,MAAQ,MAAQV,EAASU,KAAKnG,YAE3C,cAACyC,EAAA,EAAD,CAAYE,QAAQ,YAAYN,MAAM,gBAAtC,SACGoD,EAASW,YAEZ,cAAC3D,EAAA,EAAD,CAAYE,QAAQ,YAAY0D,WAAS,EAAzC,SACGZ,EAASa,uBAMnBmE,EAAQtF,KAAI,SAACmF,GAAD,OACX,cAACD,GAAD,CAAwBC,OAAQA,GAAnBA,EAAOpK,OAGpBH,GACA,cAAC+F,EAAA,EAAD,CAAgBpD,UAAU,MAA1B,SACE,cAACuD,EAAA,EAAD,CAAM/D,UAAWP,EAAQyD,KAAzB,SACE,qBAAKlD,UAAWP,EAAQ0D,YAAxB,SACE,eAACa,EAAA,EAAD,WACE,cAACiB,EAAA,EAAD,CACIxE,QAAQ,WACRyE,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTpH,GAAG,YACHqH,MAAM,aACNC,MAAO8C,EACP7C,SAAU,SAACC,GAAD,OAAOiD,EAAUjD,EAAEC,OAAOH,UAEtC,cAAC1E,EAAA,EAAD,CACEwE,WAAS,EACT3E,QAAQ,YACRN,MAAM,UACNE,QAzEqB,2CAqEvB,kCC5CLwI,OA9Bf,WAAiB,IAAD,EACUC,IAAM1G,UAAS,GADzB,mBACPF,EADO,KACD6G,EADC,KASd,OACE,cAAC,IAAD,CAAUnM,MAAOA,EAAjB,SACE,eAAC,IAAD,WACE,cAACoK,EAAA,EAAD,IACA,cAAC/E,EAAD,CAAaC,KAAMA,EAAMC,kBARL,WACxB4G,GAAQ,MAQJ,eAAChH,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACzC,EAAD,CAAQG,WAAYwC,EAAMvC,iBAbT,WACvBoJ,GAAQ,MAaF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASxI,UAAWyI,KAChC,cAAC,IAAD,CAAOD,KAAK,YAAYxI,UAAWkH,KACnC,cAAC,IAAD,CAAOsB,KAAK,sBAAsBxI,UAAW8H,KAC7C,cAAC,IAAD,CAAOU,KAAK,UAAUxI,UAAW8D,IACjC,cAAC,IAAD,CAAO0E,KAAK,IAAIxI,UAAW8D,UAG/B,cAACxC,EAAD,UCjCRhB,IAAMC,SAASmI,QAAU,2BACzB,IAAM/L,GAAQ+D,aAAaiI,QAAQ,SAC7BrL,GAAWoD,aAAaiI,QAAQ,YAClChM,IAASW,KACXgD,IAAMC,SAASC,QAAQ4F,OAAS,CAAE3F,cAAc,UAAD,OAAY9D,KAC3DP,EAAMwE,SAAS,CAAElE,KAAM,QAASE,QAAS,CAAEU,YAAUX,aAGvDiM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1cc06d1c.chunk.js","sourcesContent":["import { combineReducers, createStore } from 'redux'\n\nfunction auth (state = {}, action) {\n  switch (action.type) {\n    case 'login': {\n      const token = action.payload.token\n      const tokenParts = token.split('.')\n      const encodedPayload = tokenParts[1]\n      const rawPayload = atob(encodedPayload)\n      const user = JSON.parse(rawPayload)\n      return { authenticated: true, username: action.payload.username, userId: user.id }\n    }\n    case 'logout':\n      return { authenticated: false }\n    default:\n      return state\n  }\n}\n\nfunction topic (state = {}, action) {\n  switch (action.type) {\n    case 'setTopic':\n      return { topic: action.payload.topic }\n    case 'setTopics':\n      return { topics: action.payload.topics }\n    default:\n      return state\n  }\n}\n\nexport const store = createStore(\n  combineReducers({ auth, topic })\n)\n","import axios from 'axios'\nimport React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { store } from '../redux'\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n}))\n\nexport default function Header (props) {\n  const classes = useStyles()\n  const { drawerOpen, handleDrawerOpen } = props\n\n  function logout () {\n    delete axios.defaults.headers.Authorization\n    localStorage.clear('token')\n    store.dispatch({ type: 'logout' })\n  }\n\n  const selectAuthenticated = state => state && state.auth.authenticated\n  const authenticated = useSelector(selectAuthenticated)\n  const selectUsername = state => state && state.auth.username\n  const username = useSelector(selectUsername)\n\n  const selectTopic = state => state && state.topic.topic\n  const topic = useSelector(selectTopic)\n  const title = topic ? `CodeTalk - ${topic}` : 'CodeTalk'\n\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, drawerOpen && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n        {\n          authenticated\n            ? (\n                <span>\n                  <Typography>\n                    Welcome, {username}\n                  </Typography>\n                  <Button variant=\"outlined\" size=\"small\" onClick={logout}>\n                    Log out\n                  </Button>\n                </span>\n              )\n            : (\n                <span>\n                  <Button variant=\"outlined\" size=\"small\" component={Link} to=\"/login\">\n                    Log in\n                  </Button>\n                  <Button variant=\"outlined\" size=\"small\" component={Link} to=\"/register\">\n                    Register\n                  </Button>\n                </span>\n              )\n        }\n      </Toolbar>\n    </React.Fragment>\n  )\n}\n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  drawerOpen: PropTypes.bool,\n  handleDrawerOpen: PropTypes.func,\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nfunction Copyright () {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link>\n        CodeTalk\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6, 0),\n  },\n}))\n\nexport default function Footer (props) {\n  const classes = useStyles()\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Copyright />\n      </Container>\n    </footer>\n  )\n}\n","import { Divider, Drawer, IconButton, ListItem, ListItemText } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport PropTypes from 'prop-types'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { store } from '../redux'\n\nexport default function TopicDrawer (props) {\n  const { open, handleDrawerClose } = props\n  const [topics, setTopics] = useState([])\n\n  useEffect(async () => {\n    const response = await axios.get('/topics')\n    const topics = response.data.topics\n    setTopics(topics)\n    store.dispatch({ type: 'setTopics', payload: { topics } })\n  }, [])\n\n  return (\n    <Drawer\n      variant=\"persistent\"\n      open={open}\n    >\n      <div>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n        <ListItem button component={Link} to=\"/\">\n          <ListItemText primary=\"All\" />\n        </ListItem>\n        {topics.map(topic => (\n          <ListItem button key={topic.title} component={Link} to={'/' + topic.title}>\n            <ListItemText primary={topic.title} />\n          </ListItem>\n        ))}\n    </Drawer>\n  )\n}\n\nTopicDrawer.propTypes = {\n  open: PropTypes.bool,\n  handleDrawerClose: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n})\n\nexport default function Question (props) {\n  const classes = useStyles()\n  const { question } = props\n\n  return (\n    <Grid item sm={12} md={12}>\n      <CardActionArea component=\"a\" href={`/${question.Topic.title}/${question.id}`}>\n        <Card className={classes.card}>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography component=\"h2\" variant=\"h5\">\n                {question.title} - {question.User.username}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {question.createdAt}\n              </Typography>\n              <Typography variant=\"subtitle1\" paragraph>\n                {question.description}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"primary\">\n                {question.answerCount} answers\n              </Typography>\n            </CardContent>\n          </div>\n        </Card>\n      </CardActionArea>\n    </Grid>\n  )\n}\n\nQuestion.propTypes = {\n  question: PropTypes.object\n}\n","import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { Button, Card, CardActionArea, CardContent, Grid, makeStyles, TextField } from '@material-ui/core'\nimport Question from './Question'\nimport { useParams } from 'react-router-dom'\nimport { store } from '../redux'\nimport { useSelector } from 'react-redux'\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n})\n\nexport default function QuestionList (props) {\n  const classes = useStyles()\n  const [questions, setQuestions] = useState([])\n  const [question, setQuestion] = useState('')\n  const [hack, setHack] = useState(0)\n  const { topic } = useParams()\n  const selectAuthenticated = state => state && state.auth.authenticated\n  const authenticated = useSelector(selectAuthenticated)\n  const selectUserId = state => state && state.auth.userId\n  const userId = useSelector(selectUserId)\n\n  useEffect(async () => {\n    store.dispatch({ type: 'setTopic', payload: { topic } })\n    let response\n    if (topic) {\n      response = await axios.get(`/questions?topic=${topic}`)\n    } else {\n      response = await axios.get('/questions')\n    }\n    setQuestions(response.data.questions)\n  }, [topic, hack])\n\n  async function ask () {\n    const questionData = {\n      title: question,\n      topicTitle: topic,\n      userId\n    }\n    await axios.post('/questions/', questionData)\n    setHack(hack + 1)\n  }\n\n  return (\n    <main>\n      <Grid container spacing={4}>\n        {questions.map((question) => (\n          <Question key={question.id} question={question} />\n        ))}\n        {\n          authenticated && topic &&\n          <CardActionArea component=\"div\">\n            <Card className={classes.card}>\n              <div className={classes.cardDetails}>\n                <CardContent>\n                  <TextField\n                    variant='outlined'\n                    margin='normal'\n                    required\n                    fullWidth\n                    id='newQuestion'\n                    label='New question'\n                    value={question}\n                    onChange={(e) => setQuestion(e.target.value)}\n                  />\n                  <Button\n                    fullWidth\n                    variant='contained'\n                    color='primary'\n                    onClick={ask}\n                  >\n                    Ask\n                  </Button>\n                </CardContent>\n              </div>\n            </Card>\n          </CardActionArea>\n        }\n      </Grid>\n    </main>\n  )\n}\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { store } from '../redux'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default () => {\n  const classes = useStyles()\n  const { handleSubmit, register, remember } = useForm({})\n  const [error, setError] = useState('')\n  const history = useHistory()\n\n  const onSubmit = handleSubmit(async (data) => {\n    const { username, password, remember } = data\n    try {\n      const response = await axios.post('/login', { username, password })\n      const token = response.data.token\n      axios.defaults.headers.common = { Authorization: `Bearer ${token}` }\n      store.dispatch({ type: 'login', payload: { username, token } })\n      if (remember) {\n        localStorage.setItem('token', token)\n        localStorage.setItem('username', username)\n      }\n      history.push('/')\n    } catch (error) {\n      if (error.response.status === 401) {\n        setError('Invalid credentials')\n      } else {\n        setError('Something went wrong')\n      }\n    }\n  })\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          {error || 'Log in'}\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='username'\n            label='Username'\n            name='username'\n            autoComplete='username'\n            autoFocus\n            inputRef={register}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            label='Password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n            inputRef={register}\n          />\n          <FormControlLabel\n            control={<Checkbox color='primary' />}\n            label='Remember me'\n            name='remember'\n            value={remember}\n            inputRef={register}\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href='/register' variant='body2'>\n                {'Don\\'t have an account? Register'}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  )\n}\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useForm } from 'react-hook-form'\nimport Container from '@material-ui/core/Container'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error: {\n    color: 'red',\n  },\n}))\n\nexport default function Register () {\n  const classes = useStyles()\n  const {\n    register, errors, handleSubmit, watch,\n    // control\n  } = useForm()\n  const history = useHistory()\n\n  async function onSubmit (form) {\n    const { username, password } = form\n    const response = await axios.post('/register', { username, password })\n    if (response.status === 201) {\n      history.push('/login')\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                inputRef={register({ required: 'You must provide a username' })}\n              />\n              {errors.username && (\n                <span className={classes.error}>{errors.username.message}</span>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={register({\n                  required: 'You must provide a password.',\n                  pattern: {\n                    value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                    message: 'Password should contain at least 8 characters and 1 number',\n                  },\n                })}\n              />\n            </Grid>\n            {errors.password && (\n              <span className={classes.error}>{errors.password.message}</span>\n            )}\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password2\"\n                label=\"Repeat password\"\n                type=\"password\"\n                id=\"password2\"\n                autoComplete=\"current-password\"\n                inputRef={register({\n                  required: 'You must provide a repeat password.',\n                  validate: (value) => value === watch('password') || 'The passwords do not match'\n                })}\n              />\n              {errors.password2 && (\n                <span className={classes.error}>{errors.password2.message}</span>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n})\n\nexport default function Answer (props) {\n  const classes = useStyles()\n  const { answer } = props\n\n  return (\n    <Grid item sm={12} md={12}>\n      <CardActionArea>\n        <Card className={classes.card}>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {answer.createdAt}\n              </Typography>\n              <Typography variant=\"subtitle1\" paragraph>\n                {answer.text} - {answer.User.username}\n              </Typography>\n            </CardContent>\n          </div>\n        </Card>\n      </CardActionArea>\n    </Grid>\n  )\n}\n\nAnswer.propTypes = {\n  answer: PropTypes.object\n}\n","import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { Button, Card, CardActionArea, CardContent, Grid, makeStyles, TextField, Typography } from '@material-ui/core'\nimport Answer from './Answer'\nimport { useParams } from 'react-router-dom'\nimport { store } from '../redux'\nimport { useSelector } from 'react-redux'\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n})\n\nexport default function AnswerList (props) {\n  const classes = useStyles()\n  const [answers, setAnswers] = useState([])\n  const [question, setQuestion] = useState({})\n  const [answer, setAnswer] = useState('')\n  const { topic, questionId } = useParams()\n  const selectAuthenticated = state => state && state.auth.authenticated\n  const authenticated = useSelector(selectAuthenticated)\n  const selectUserId = state => state && state.auth.userId\n  const userId = useSelector(selectUserId)\n  const [hack, setHack] = useState(0)\n\n  useEffect(async () => {\n    store.dispatch({ type: 'setTopic', payload: { topic } })\n    const response = await axios.get(`/questions/${questionId}`)\n    setAnswers(response.data.Answers)\n    setQuestion(response.data)\n  }, [questionId, hack])\n\n  async function makeAnswer () {\n    const answerData = {\n      text: answer,\n      questionId,\n      userId\n    }\n    await axios.post('/answers/', answerData)\n    setHack(hack + 1)\n  }\n\n  return (\n    <main>\n      <Grid container spacing={4}>\n        <CardActionArea>\n          <Card className={classes.card}>\n            <div className={classes.cardDetails}>\n              <CardContent>\n                <Typography component=\"h2\" variant=\"h5\">\n                  {question.title}\n                  { question.User && ' - ' + question.User.username}\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  {question.createdAt}\n                </Typography>\n                <Typography variant=\"subtitle1\" paragraph>\n                  {question.description}\n                </Typography>\n              </CardContent>\n            </div>\n          </Card>\n        </CardActionArea>\n        {answers.map((answer) => (\n          <Answer key={answer.id} answer={answer} />\n        ))}\n        {\n          authenticated &&\n          <CardActionArea component=\"div\">\n            <Card className={classes.card}>\n              <div className={classes.cardDetails}>\n                <CardContent>\n                  <TextField\n                      variant='outlined'\n                      margin='normal'\n                      required\n                      fullWidth\n                      id='newAnswer'\n                      label='New answer'\n                      value={answer}\n                      onChange={(e) => setAnswer(e.target.value)}\n                    />\n                    <Button\n                      fullWidth\n                      variant='contained'\n                      color='primary'\n                      onClick={makeAnswer}\n                    >\n                      Answer\n                    </Button>\n                </CardContent>\n              </div>\n            </Card>\n          </CardActionArea>\n        }\n      </Grid>\n    </main>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { Container } from '@material-ui/core'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport TopicDrawer from './components/TopicDrawer'\nimport QuestionList from './components/QuestionList'\nimport LogIn from './components/Login'\nimport Register from './components/Register'\nimport { store } from './redux'\nimport AnswerList from './components/AnswerList'\n\nfunction App () {\n  const [open, setOpen] = React.useState(true)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <CssBaseline />\n        <TopicDrawer open={open} handleDrawerClose={handleDrawerClose} />\n        <Container maxWidth=\"lg\">\n          <Header drawerOpen={open} handleDrawerOpen={handleDrawerOpen} />\n          <Switch>\n            <Route path=\"/login\" component={LogIn}/>\n            <Route path=\"/register\" component={Register}/>\n            <Route path=\"/:topic/:questionId\" component={AnswerList}/>\n            <Route path=\"/:topic\" component={QuestionList}/>\n            <Route path=\"/\" component={QuestionList}/>\n          </Switch>\n        </Container>\n        <Footer />\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App\n","import axios from 'axios'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { store } from './redux'\n\naxios.defaults.baseURL = 'http://68.183.18.78:8000'\nconst token = localStorage.getItem('token')\nconst username = localStorage.getItem('username')\nif (token && username) {\n  axios.defaults.headers.common = { Authorization: `Bearer ${token}` }\n  store.dispatch({ type: 'login', payload: { username, token } })\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}